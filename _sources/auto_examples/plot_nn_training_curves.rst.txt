.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_plot_nn_training_curves.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_nn_training_curves.py:


=======================================
Plotting Neural Network Training Curves
=======================================

This is a basic example using a convolutional recurrent neural network to learn segments directly from time series data




.. code-block:: python

    # Author: David Burns
    # License: BSD

    import matplotlib.pyplot as plt
    import numpy as np
    from keras.layers import Dense, LSTM, Conv1D
    from keras.models import Sequential
    from keras.wrappers.scikit_learn import KerasClassifier
    from pandas import DataFrame
    from sklearn.model_selection import train_test_split

    from seglearn.datasets import load_watch
    from seglearn.pipe import Pype
    from seglearn.transform import SegmentX








Simple NN Model
#############################################



.. code-block:: python


    def crnn_model(width=100, n_vars=6, n_classes=7, conv_kernel_size=5,
                   conv_filters=10, lstm_units=10):
        input_shape = (width, n_vars)
        model = Sequential()
        model.add(Conv1D(filters=conv_filters, kernel_size=conv_kernel_size,
                         padding='valid', activation='relu', input_shape=input_shape))
        model.add(LSTM(units=lstm_units, dropout=0.1, recurrent_dropout=0.1))
        model.add(Dense(n_classes, activation="softmax"))

        model.compile(loss='categorical_crossentropy', optimizer='adam',
                      metrics=['accuracy'])

        return model








Setup
#############################################



.. code-block:: python


    # load the data
    data = load_watch()
    X = data['X']
    y = data['y']

    # split the data
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)

    # create a segment learning pipeline
    width = 100
    pipe = Pype([('seg', SegmentX(order='C')),
                 ('crnn', KerasClassifier(build_fn=crnn_model, epochs=5, batch_size=256,
                                          verbose=0, validation_split=0.2))])







Accessing training history
#############################################



.. code-block:: python


    # this is a bit of a hack, because history object is returned by the
    # keras wrapper when fit is called
    # this approach won't work with a more complex estimator pipeline, in which case
    # a callable class with the desired properties should be made passed to build_fn

    pipe.fit(X_train, y_train)
    print(DataFrame(pipe.history.history))
    ac_train = pipe.history.history['acc']
    ac_val = pipe.history.history['val_acc']
    epoch = np.arange(len(ac_train)) + 1





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    val_loss  ...       acc
    0  2.041563  ...  0.121492
    1  1.943138  ...  0.162700
    2  1.893081  ...  0.219538
    3  1.858949  ...  0.245115
    4  1.820415  ...  0.273890

    [5 rows x 4 columns]


Training Curves
#############################################



.. code-block:: python


    plt.plot(epoch, ac_train, 'o', label="train")
    plt.plot(epoch, ac_val, '+', label="validation")
    plt.xlabel("Epoch")
    plt.ylabel("Accuracy")
    plt.legend()
    plt.show()



.. image:: /auto_examples/images/sphx_glr_plot_nn_training_curves_001.png
    :class: sphx-glr-single-img




**Total running time of the script:** ( 4 minutes  4.472 seconds)


.. _sphx_glr_download_auto_examples_plot_nn_training_curves.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_nn_training_curves.py <plot_nn_training_curves.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_nn_training_curves.ipynb <plot_nn_training_curves.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
